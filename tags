!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
C	include/search.h	/^    cube* C;$/;"	m	struct:way_node
CUBE_H_	include/cube.h	2;"	d
CUBE_SOLVE_H_	cube_solve.h	2;"	d
HASH_H_	include/hash.h	2;"	d
SEARCH_H_	include/search.h	2;"	d
SYS_H_	sys.h	2;"	d
act	include/search.h	/^    u8 act;$/;"	m	struct:way_node
ca	include/cube.h	/^    u8 ca[8];$/;"	m	struct:cube
circulate	include/cube.h	11;"	d
circulate2	include/cube.h	18;"	d
cr	include/cube.h	/^    u8 cr[8];$/;"	m	struct:cube
create_node	src/search.c	/^way_node *create_node(cube *C){$/;"	f
crotate	include/cube.h	22;"	d
crotate2	include/cube.h	30;"	d
cube	include/cube.h	/^typedef struct cube{$/;"	s
cube	include/cube.h	/^} cube;$/;"	t	typeref:struct:cube
cube_copy	src/cube.c	/^cube* cube_copy(cube *C){$/;"	f
cube_match	src/cube.c	/^u8 cube_match(cube *C1,cube *C2){$/;"	f
cube_match_phase1	src/cube.c	/^u8 cube_match_phase1(cube* C){$/;"	f
cube_operation	src/cube.c	/^cube* cube_operation(cube *C,u8 op){$/;"	f
cube_print	src/cube.c	/^void cube_print(cube *C){$/;"	f
ea	include/cube.h	/^    u8 ea[12];$/;"	m	struct:cube
er	include/cube.h	/^    u8 er[12];$/;"	m	struct:cube
erotate	include/cube.h	26;"	d
hash	src/hash.c	/^way_node* hash(way_node *node){$/;"	f
hash_add	src/hash.c	/^void hash_add(way_node* last_node,way_node* new_node){$/;"	f
hash_init	src/hash.c	/^void hash_init(){$/;"	f
hash_next	include/search.h	/^    struct way_node* hash_next;$/;"	m	struct:way_node	typeref:struct:way_node::way_node
hash_search	src/hash.c	/^u8 hash_search(way_node* hash_start, way_node* node){$/;"	f
is_visted	src/hash.c	/^u8 is_visted(way_node* node){$/;"	f
main	main.c	/^int main(){ $/;"	f
node_hash	src/hash.c	/^way_node* node_hash[12][8];$/;"	v
queue_buttom_pointer	src/search.c	/^way_node *queue_buttom_pointer;$/;"	v
queue_create	src/search.c	/^void queue_create(way_node* node){$/;"	f
queue_next	include/search.h	/^    struct way_node* queue_next;$/;"	m	struct:way_node	typeref:struct:way_node::way_node
queue_pop	src/search.c	/^way_node *queue_pop(){$/;"	f
queue_push	src/search.c	/^void queue_push(way_node* node){$/;"	f
queue_top_pointer	src/search.c	/^way_node *queue_top_pointer;$/;"	v
restored	src/cube.c	/^cube restored={{0,1,2,3,4,5,6,7},{0,0,0,0,0,0,0,0},{0,1,2,3,4,5,6,7,8,9,10,11},{0,0,0,0,0,0,0,0,0,0,0,0}};$/;"	v
search_phase1	src/search.c	/^way_node* search_phase1(way_node *head){$/;"	f
state_last	include/search.h	/^    struct way_node* state_last;$/;"	m	struct:way_node	typeref:struct:way_node::way_node
swap	include/cube.h	6;"	d
u8	include/cube.h	4;"	d
way_node	include/search.h	/^typedef struct way_node{$/;"	s
way_node	include/search.h	/^} way_node;$/;"	t	typeref:struct:way_node
